name: Release

env:
  GO111MODULE: "on"
  GOPATH: "/home/runner/work/armada/armada/go"
  GOCACHE: "/home/runner/.cache/go-build"

on: 
  push:
    tags: 
      - 'v*'

defaults:
  run:
    shell: bash

jobs:

  update-charts:
    # needs: [release, release-dotnet-client]
    name: Publish Armada charts
    runs-on: ubuntu-20.04
    steps:
      - name: Install Step
        env: 
          VERSION: 0.15.16
        run: |
          curl -sLO https://github.com/smallstep/cli/releases/download/v${VERSION}/step-cli_${VERSION}_amd64.deb
          sudo dpkg -i step-cli_${VERSION}_amd64.deb
          rm step-cli_${VERSION}_amd64.deb
      - name: Acquire access token
        id: token
        env: 
          APP_ID: ${{ secrets.APP_ID }}
          APP_PEM: ${{ secrets.GH_APP_PEM }}
          INSTALLATION_ID: ${{ secrets.INSTALLATION_ID }}
        run: |
          echo "$APP_PEM" > key.pem
          trap "rm -f key.pem" EXIT
          APP_TOKEN=$(step crypto jwt sign --key key.pem --issuer $APP_ID --expiration $(date --date '+5 min' +'%s') --subtle </dev/null)
          ACCESS_TOKEN=$(curl -s -X POST -H "Accept: application/vnd.github.v3+json" -H "Authorization:Bearer $APP_TOKEN" https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens | jq -r '.token')
          echo "::set-output name=token::$ACCESS_TOKEN"
      - name: Publish chart - armada
        env: 
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
          GH_WORKFLOW: "publish-charts.yaml" # workflow to execute 
          GH_CHART_REPO: "mkomatinovic/charts" # owner/repo where charts are published 
          GH_PAGES_BRANCH: "test_gh_pages" # gh-pages
          REPO: "mkomatinovic/armada" # Repository from where we want to build Charts
          REPO_REF: ${GITHUB_REF##*/} # The branch/tag that triggered the workflow
          REPO_CHART: |
            '{
              "include": [
                {
                  "chart": "armada",
                  "src_path": "deployment/armada/",
                  "dst_path": "armada/"
                },
                {
                  "chart": "executor",
                  "src_path": "deployment/executor/",
                  "dst_path": "armada/"
                },
                {
                  "chart": "executor-cluster-monitoring",
                  "src_path": "deployment/executor-cluster-monitoring/",
                  "dst_path": "armada/"
                },
                {
                  "chart": "lookout",
                  "src_path": "deployment/lookout/",
                  "dst_path": "armada/"
                },
                {
                  "chart": "lookout-migration",
                  "src_path": "deployment/lookout-migration/",
                  "dst_path": "armada/"
                },
                {
                  "chart": "binoculars",
                  "src_path": "deployment/binoculars/",
                  "dst_path": "armada/"
                }
              ]
            }'
        run: |
          gh workflow run ${{ env.GH_WORKFLOW }} --repo ${{ env.GH_CHART_REPO }} --ref ${{ env.GH_PAGES_BRANCH }} \
            --field repo=${{ env.REPO }} \
            --field repo_ref=${{ env.REPO_REF }} \
            --field repo_chart=${{ env.REPO_CHART }}